pipeline{
    agent any
    tools {
  maven 'maven 1'
 
}
    stages {
  stage('git checkout') {
    steps {
      git 'https://github.com/HopeKonu/Jenkins-Full-Course-on-aws-Linux.git'
    }
  }

  stage('SonarQube QA') {
    
  steps {

   withSonarQubeEnv(installationName : 'sonarqube1' , credentialsId: 'sonar-jenkins-connection') {
    sh 'mvn -f Maven/pom.xml clean package sonar:sonar'

      
   
}
    
  }
}


// stage ("Jenkins-Jfrog-connect"){
//   steps{

//     rtServer (
//     id: 'jesnins-jfrog-name',
//     url: 'http://54.221.34.117:8081/artifactory',
//         // If you're using username and password:
//     username: 'jenkins',
//     password: '',
//         // If you're using Credentials ID:
//         // credentialsId: 'ccrreeddeennttiiaall',
//         // // If Jenkins is configured to use an http proxy, you can bypass the proxy when using this Artifactory server:
//         // bypassProxy: true,
//         // // Configure the connection timeout (in seconds).
//         // // The default value (if not configured) is 300 seconds: 
//         // timeout: 300
// )
//   }

// }



stage("Jenkins artifacts uploading to jfrog"){
  steps{
rtUpload (
    serverId: 'jenkinsserver',
    spec: '''{
          "files": [
            {
              "pattern": "Maven/target/*.jar",
              "target": "libs-snapshot-local/"
            }
         ]
    }''',

    // Optional - Associate the uploaded files with the following custom build name and build number,
    // as build artifacts.
    // If not set, the files will be associated with the default build name and build number (i.e the 
    // the Jenkins job name and number).
    // buildName: 'holyFrog',
    // buildNumber: '42',
    // // Optional - Only if this build is associated with a project in Artifactory, set the project key as follows.
    // project: 'my-project-key'
)

  }
}




}

}
